/**
  postmate - A powerful, simple, promise-based postMessage library
  @version v1.4.0
  @link https://github.com/dollarshaveclub/postmate
  @author Jacob Kelley <jakie8@gmail.com>
  @license MIT
**/
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):e.Postmate=t()}(this,function(){"use strict";function e(t){return(e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(t)}function t(e){this.wrapped=e}function n(e){var n,r;function i(n,r){try{var o=e[n](r),s=o.value,l=s instanceof t;Promise.resolve(l?s.wrapped:s).then(function(e){l?i("next",e):a(o.done?"return":"normal",e)},function(e){i("throw",e)})}catch(e){a("throw",e)}}function a(e,t){switch(e){case"return":n.resolve({value:t,done:!0});break;case"throw":n.reject(t);break;default:n.resolve({value:t,done:!1})}(n=n.next)?i(n.key,n.arg):r=null}this._invoke=function(e,t){return new Promise(function(a,o){var s={key:e,arg:t,resolve:a,reject:o,next:null};r?r=r.next=s:(n=r=s,i(e,t))})},"function"!=typeof e.return&&(this.return=void 0)}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function a(e,t,n){return t&&i(e.prototype,t),n&&i(e,n),e}"function"==typeof Symbol&&Symbol.asyncIterator&&(n.prototype[Symbol.asyncIterator]=function(){return this}),n.prototype.next=function(e){return this._invoke("next",e)},n.prototype.throw=function(e){return this._invoke("throw",e)},n.prototype.return=function(e){return this._invoke("return",e)};Object.getPrototypeOf;var o=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e};"object"==typeof Reflect&&Reflect.construct,"function"==typeof Map&&new Map;var s="application/x-postmate-v1+json",l=Object.prototype.hasOwnProperty,c=0,d=function(){var e;return m.debug?(e=console).log.apply(e,arguments):null},u=function(t,n){return t.origin===n&&("object"===e(t.data)&&("postmate"in t.data&&(t.data.type===s&&!!{"handshake-reply":1,call:1,emit:1,reply:1,request:1}[t.data.postmate])))},h=function(e,t){var n="function"==typeof e[t]?e[t]():e[t];return m.Promise.resolve(n)},p=function(){function e(t){var n=this;r(this,e),this.parent=t.parent,this.frame=t.frame,this.child=t.child,this.childOrigin=t.childOrigin,this.events={},d("Parent: Registering API"),d("Parent: Awaiting messages..."),this.listener=function(e){var t=((e||{}).data||{}).value||{},r=t.data,i=t.name;"emit"===e.data.postmate&&(d("Parent: Received event emission: ".concat(i)),i in n.events&&n.events[i].call(n,r))},this.parent.addEventListener("message",this.listener,!1),d("Parent: Awaiting event emissions from Child")}return a(e,[{key:"get",value:function(e){var t=this;return new m.Promise(function(n){var r=++c;t.parent.addEventListener("message",function e(i){i.data.uid===r&&"reply"===i.data.postmate&&(t.parent.removeEventListener("message",e,!1),n(i.data.value))},!1),t.child.postMessage({postmate:"request",type:s,property:e,uid:r},t.childOrigin)})}},{key:"call",value:function(e,t){this.child.postMessage({postmate:"call",type:s,property:e,data:t},this.childOrigin)}},{key:"on",value:function(e,t){this.events[e]=t}},{key:"destroy",value:function(){d("Parent: Destroying Postmate instance"),window.removeEventListener("message",this.listener,!1),this.frame.parentNode.removeChild(this.frame)}}]),e}(),f=function(){function e(t){var n=this;r(this,e),this.model=t.model,this.parent=t.parent,this.parentOrigin=t.parentOrigin,this.child=t.child,d("Child: Registering API"),d("Child: Awaiting messages..."),this.child.addEventListener("message",function(e){if(u(e,n.parentOrigin)){d("Child: Received request",e.data);var t=e.data,r=t.property,i=t.uid,a=t.data;"call"!==e.data.postmate?h(n.model,r).then(function(t){return e.source.postMessage({property:r,postmate:"reply",type:s,uid:i,value:t},e.origin)}):r in n.model&&"function"==typeof n.model[r]&&n.model[r].call(n,a)}})}return a(e,[{key:"emit",value:function(e,t){d('Child: Emitting Event "'.concat(e,'"'),t),this.parent.postMessage({postmate:"emit",type:s,value:{name:e,data:t}},this.parentOrigin)}}]),e}(),m=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:userOptions,n=t.container,i=void 0===n?void 0!==i?i:document.body:n,a=t.model,o=t.url;return r(this,e),this.parent=window,this.frame=document.createElement("iframe"),i.appendChild(this.frame),this.child=this.frame.contentWindow||this.frame.contentDocument.parentWindow,this.model=a||{},this.sendHandshake(o)}return a(e,[{key:"sendHandshake",value:function(t){var n,r=this,i=function(e){var t=document.createElement("a");return t.href=e,t.origin||"".concat(t.protocol,"//").concat(t.hostname)}(t),a=0;return new e.Promise(function(e,o){r.parent.addEventListener("message",function t(a){return!!u(a,i)&&("handshake-reply"===a.data.postmate?(clearInterval(n),d("Parent: Received handshake reply from Child"),r.parent.removeEventListener("message",t,!1),r.childOrigin=a.origin,d("Parent: Saving Child origin",r.childOrigin),e(new p(r))):(d("Parent: Invalid handshake reply"),o("Failed handshake")))},!1);var l=function(){d("Parent: Sending handshake attempt ".concat(++a),{childOrigin:i}),r.child.postMessage({postmate:"handshake",type:s,model:r.model},i),5===a&&clearInterval(n)},c=function(){l(),n=setInterval(l,500)};r.frame.attachEvent?r.frame.attachEvent("onload",c):r.frame.onload=c,d("Parent: Loading frame",{url:t}),r.frame.src=t})}}]),e}();return Object.defineProperty(m,"debug",{configurable:!0,enumerable:!0,writable:!0,value:!1}),Object.defineProperty(m,"Promise",{configurable:!0,enumerable:!0,writable:!0,value:function(){try{return window?window.Promise:Promise}catch(e){return null}}()}),m.Model=function(){function e(t){return r(this,e),this.child=window,this.model=t,this.parent=this.child.parent,this.sendHandshakeReply()}return a(e,[{key:"sendHandshakeReply",value:function(){var e=this;return new m.Promise(function(t,n){e.child.addEventListener("message",function r(i){if(i.data.postmate){if("handshake"===i.data.postmate){d("Child: Received handshake from Parent"),e.child.removeEventListener("message",r,!1),d("Child: Sending handshake reply to Parent"),i.source.postMessage({postmate:"handshake-reply",type:s},i.origin),e.parentOrigin=i.origin;var a=i.data.model;if(a){for(var o=Object.keys(a),c=0;c<o.length;c++)l.call(a,o[c])&&(e.model[o[c]]=a[o[c]]);d("Child: Inherited and extended model from Parent")}return d("Child: Saving Parent origin",e.parentOrigin),t(new f(e))}return n("Handshake Reply Failed")}},!1)})}}]),e}(),m});
