/**
 * postmate - A powerful, simple, promise-based postMessage library
 * @version v1.1.7
 * @link https://github.com/dollarshaveclub/postmate
 * @author Jacob Kelley <jakie8@gmail.com>
 * @license MIT */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):e.Postmate=t()}(this,function(){"use strict";function e(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function t(){return++c}function n(){return++u}function i(){var e;f.debug&&(e=console).log.apply(e,arguments)}function a(e){var t=document.createElement("a");return t.href=e,t.origin||t.protocol+"//"+t.hostname}function r(e,t){return e.origin===t&&("object"===s(e.data)&&("postmate"in e.data&&(e.data.type===l&&!!{"handshake-reply":1,call:1,emit:1,reply:1,request:1}[e.data.postmate])))}function o(e,t){var n="function"==typeof e[t]?e[t]():e[t];return f.Promise.resolve(n)}var d=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},l="application/x-postmate-v1+json",h=Object.prototype.hasOwnProperty,c=0,u=0,m=function(){function n(t){var a=this;e(this,n),this.parent=t.parent,this.frame=t.frame,this.child=t.child,this.childOrigin=t.childOrigin,this.childId=t.childId,this.events={},i("Parent: Registering API"),i("Parent: Awaiting messages..."),this.listener=function(e){var t=((e||{}).data||{}).value||{},n=t.data,r=t.name;"emit"===e.data.postmate&&e.data.childId===a.childId&&(i("Parent: Received event emission: "+r),r in a.events&&a.events[r].call(a,n))},this.parent.addEventListener("message",this.listener,!1),i("Parent: Awaiting event emissions from Child")}return d(n,[{key:"get",value:function(e){var n=this;return new f.Promise(function(i){var a=t(),r=function e(t){t.data.uid===a&&"reply"===t.data.postmate&&t.data.childId===n.childId&&(n.parent.removeEventListener("message",e,!1),i(t.data.value))};n.parent.addEventListener("message",r,!1),n.child.postMessage({postmate:"request",type:l,property:e,uid:a},n.childOrigin)})}},{key:"call",value:function(e,t){this.child.postMessage({postmate:"call",type:l,property:e,data:t},this.childOrigin)}},{key:"on",value:function(e,t){this.events[e]=t}},{key:"destroy",value:function(){i("Parent: Destroying Postmate instance"),window.removeEventListener("message",this.listener,!1),this.frame.parentNode.removeChild(this.frame)}}]),n}(),p=function(){function t(n){var a=this;e(this,t),this.model=n.model,this.parent=n.parent,this.parentOrigin=n.parentOrigin,this.child=n.child,this.childId=n.childId,i("Child: Registering API"),i("Child: Awaiting messages..."),this.child.addEventListener("message",function(e){if(r(e,a.parentOrigin)){i("Child: Received request",e.data);var t=e.data,n=t.property,d=t.uid,s=t.data;if("call"===e.data.postmate)return void(n in a.model&&"function"==typeof a.model[n]&&a.model[n].call(a,s));o(a.model,n).then(function(t){return e.source.postMessage({property:n,postmate:"reply",type:l,childId:a.childId,uid:d,value:t},e.origin)})}})}return d(t,[{key:"emit",value:function(e,t){i('Child: Emitting Event "'+e+'"',t),this.parent.postMessage({postmate:"emit",childId:this.childId,type:l,value:{name:e,data:t}},this.parentOrigin)}}]),t}(),f=function(){function t(i){e(this,t);var a=i.container,r=i.url,o=i.model;return this.parent=window,this.frame=document.createElement("iframe"),(a||document.body).appendChild(this.frame),this.child=this.frame.contentWindow||this.frame.contentDocument.parentWindow,this.model=o||{},this.childId=n(),this.sendHandshake(r)}return d(t,[{key:"sendHandshake",value:function(e){var n=this,o=a(e),d=0,s=void 0;return new t.Promise(function(t,a){var h=function e(d){return!!r(d,o)&&(d.data.childId===n.childId&&("handshake-reply"===d.data.postmate?(clearInterval(s),i("Parent: Received handshake reply from Child"),n.parent.removeEventListener("message",e,!1),n.childOrigin=d.origin,i("Parent: Saving Child origin",n.childOrigin),t(new m(n))):(i("Parent: Invalid handshake reply"),a("Failed handshake"))))};n.parent.addEventListener("message",h,!1);var c=function(){d++,i("Parent: Sending handshake attempt "+d,{childOrigin:o}),n.child.postMessage({postmate:"handshake",type:l,model:n.model,childId:n.childId},o),5===d&&clearInterval(s)},u=function(){c(),s=setInterval(c,500)};n.frame.attachEvent?n.frame.attachEvent("onload",u):n.frame.onload=u,i("Parent: Loading frame",{url:e}),n.frame.src=e})}}]),t}();return f.debug=!1,f.Promise=function(){try{return window?window.Promise:Promise}catch(e){return null}}(),f.Model=function(){function t(n){return e(this,t),this.child=window,this.model=n,this.parent=this.child.parent,this.sendHandshakeReply()}return d(t,[{key:"sendHandshakeReply",value:function(){var e=this;return new f.Promise(function(t,n){var a=function a(r){if("handshake"===r.data.postmate){i("Child: Received handshake from Parent"),e.child.removeEventListener("message",a,!1),i("Child: Sending handshake reply to Parent"),r.source.postMessage({postmate:"handshake-reply",type:l,childId:r.data.childId},r.origin),e.childId=r.data.childId,e.parentOrigin=r.origin;var o=r.data.model;if(o){for(var d=Object.keys(o),s=0;s<d.length;s++)h.call(o,d[s])&&(e.model[d[s]]=o[d[s]]);i("Child: Inherited and extended model from Parent")}return i("Child: Saving Parent origin",e.parentOrigin),t(new p(e))}return n("Handshake Reply Failed")};e.child.addEventListener("message",a,!1)})}}]),t}(),f});
