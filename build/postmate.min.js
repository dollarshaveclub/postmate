/**
  postmate - A powerful, simple, promise-based postMessage library
  @version v1.3.0
  @link https://github.com/dollarshaveclub/postmate
  @author Jacob Kelley <jakie8@gmail.com>
  @license MIT
**/
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):e.Postmate=t()}(this,function(){"use strict";var e=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var i="application/x-postmate-v1+json",a=Object.prototype.hasOwnProperty,r=0,o=function(){var e;return c.debug?(e=console).log.apply(e,arguments):null},s=function(e,n){return e.origin===n&&("object"===t(e.data)&&("postmate"in e.data&&(e.data.type===i&&!!{"handshake-reply":1,call:1,emit:1,reply:1,request:1}[e.data.postmate])))},d=function(e,t){var n="function"==typeof e[t]?e[t]():e[t];return c.Promise.resolve(n)},l=function(){function t(e){var i=this;n(this,t),this.parent=e.parent,this.frame=e.frame,this.child=e.child,this.childOrigin=e.childOrigin,this.events={},o("Parent: Registering API"),o("Parent: Awaiting messages..."),this.listener=function(e){var t=((e||{}).data||{}).value||{},n=t.data,a=t.name;"emit"===e.data.postmate&&(o("Parent: Received event emission: "+a),a in i.events&&i.events[a].call(i,n))},this.parent.addEventListener("message",this.listener,!1),o("Parent: Awaiting event emissions from Child")}return e(t,[{key:"get",value:function(e){var t=this;return new c.Promise(function(n){var a=++r;t.parent.addEventListener("message",function e(i){i.data.uid===a&&"reply"===i.data.postmate&&(t.parent.removeEventListener("message",e,!1),n(i.data.value))},!1),t.child.postMessage({postmate:"request",type:i,property:e,uid:a},t.childOrigin)})}},{key:"call",value:function(e,t){this.child.postMessage({postmate:"call",type:i,property:e,data:t},this.childOrigin)}},{key:"on",value:function(e,t){this.events[e]=t}},{key:"destroy",value:function(){o("Parent: Destroying Postmate instance"),window.removeEventListener("message",this.listener,!1),this.frame.parentNode.removeChild(this.frame)}}]),t}(),h=function(){function t(e){var a=this;n(this,t),this.model=e.model,this.parent=e.parent,this.parentOrigin=e.parentOrigin,this.child=e.child,o("Child: Registering API"),o("Child: Awaiting messages..."),this.child.addEventListener("message",function(e){if(s(e,a.parentOrigin)){o("Child: Received request",e.data);var t=e.data,n=t.property,r=t.uid,l=t.data;"call"!==e.data.postmate?d(a.model,n).then(function(t){return e.source.postMessage({property:n,postmate:"reply",type:i,uid:r,value:t},e.origin)}):n in a.model&&"function"==typeof a.model[n]&&a.model[n].call(a,l)}})}return e(t,[{key:"emit",value:function(e,t){o('Child: Emitting Event "'+e+'"',t),this.parent.postMessage({postmate:"emit",type:i,value:{name:e,data:t}},this.parentOrigin)}}]),t}(),c=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:userOptions,i=e.container,a=void 0===i?void 0!==a?a:document.body:i,r=e.model,o=e.url;return n(this,t),this.parent=window,this.frame=document.createElement("iframe"),a.appendChild(this.frame),this.child=this.frame.contentWindow||this.frame.contentDocument.parentWindow,this.model=r||{},this.sendHandshake(o)}return e(t,[{key:"sendHandshake",value:function(e){var n=this,a=function(e){var t=document.createElement("a");return t.href=e,t.origin||t.protocol+"//"+t.hostname}(e),r=0,d=void 0;return new t.Promise(function(t,h){n.parent.addEventListener("message",function e(i){return!!s(i,a)&&("handshake-reply"===i.data.postmate?(clearInterval(d),o("Parent: Received handshake reply from Child"),n.parent.removeEventListener("message",e,!1),n.childOrigin=i.origin,o("Parent: Saving Child origin",n.childOrigin),t(new l(n))):(o("Parent: Invalid handshake reply"),h("Failed handshake")))},!1);var c=function(){o("Parent: Sending handshake attempt "+ ++r,{childOrigin:a}),n.child.postMessage({postmate:"handshake",type:i,model:n.model},a),5===r&&clearInterval(d)},u=function(){c(),d=setInterval(c,500)};n.frame.attachEvent?n.frame.attachEvent("onload",u):n.frame.onload=u,o("Parent: Loading frame",{url:e}),n.frame.src=e})}}]),t}();return c.debug=!1,c.Promise=function(){try{return window?window.Promise:Promise}catch(e){return null}}(),c.Model=function(){function t(e){return n(this,t),this.child=window,this.model=e,this.parent=this.child.parent,this.sendHandshakeReply()}return e(t,[{key:"sendHandshakeReply",value:function(){var e=this;return new c.Promise(function(t,n){e.child.addEventListener("message",function r(s){if(s.data.postmate){if("handshake"===s.data.postmate){o("Child: Received handshake from Parent"),e.child.removeEventListener("message",r,!1),o("Child: Sending handshake reply to Parent"),s.source.postMessage({postmate:"handshake-reply",type:i},s.origin),e.parentOrigin=s.origin;var d=s.data.model;if(d){for(var l=Object.keys(d),c=0;c<l.length;c++)a.call(d,l[c])&&(e.model[l[c]]=d[l[c]]);o("Child: Inherited and extended model from Parent")}return o("Child: Saving Parent origin",e.parentOrigin),t(new h(e))}return n("Handshake Reply Failed")}},!1)})}}]),t}(),c});
