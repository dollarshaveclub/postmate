/**
 * postmate - A powerful, simple, promise-based postMessage library
 * @version v1.1.3
 * @link https://github.com/dollarshaveclub/postmate
 * @author Jacob Kelley <jakie8@gmail.com>
 * @license MIT */
!function(e,n){if("function"==typeof define&&define.amd)define(["exports"],n);else if("undefined"!=typeof exports)n(exports);else{var t={exports:{}};n(t.exports),e.Postmate=t.exports}}(this,function(e){"use strict";function n(e){if(Array.isArray(e)){for(var n=0,t=Array(e.length);n<e.length;n++)t[n]=e[n];return t}return Array.from(e)}function t(){return++c}function r(){var e;u&&(e=console).log.apply(e,arguments)}function a(e){var n=document.createElement("a");return n.href=e,n.origin||n.protocol+"//"+n.hostname}function o(e,n){return e.origin===n&&("object"===s(e.data)&&("postmate"in e.data&&(e.data.type===l&&!!{"handshake-reply":1,call:1,reply:1}[e.data.postmate])))}function i(e,n){var a=e.localName,i=e.local,d=e.remote,s=e.remoteOrigin;r(a+": Creating call sender");var c=function(e){return function(){for(var n=arguments.length,c=Array(n),u=0;u<n;u++)c[u]=arguments[u];return r(a+": Sending "+e+"() call"),new m(function(n){var u=t(),m=function t(d){o(d,s)&&d.data.uid===u&&"reply"===d.data.postmate&&(r(a+": Received "+e+"() reply"),i.removeEventListener("message",t,!1),n(d.data.returnValue))};i.addEventListener("message",m,!1),d.postMessage({postmate:"call",type:l,uid:u,methodName:e,args:c},s)})}};return n.reduce(function(e,n){return e[n]=c(n),e},{})}function d(e,t){var a=e.localName,i=e.local,d=e.remote,s=e.remoteOrigin;r(a+": Connecting call receiver");var c=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(o(e,s)){var i=e.data||{},c=i.methodName,u=i.uid,f=i.args;if("call"===e.data.postmate&&(r(a+": Received "+c+"() call"),c in t)){var p=t[c].apply(t,n(f));m.resolve(p).then(function(e){r(a+": Sending "+c+"() reply"),d.postMessage({postmate:"reply",type:l,uid:u,returnValue:e},s)})}}};return i.addEventListener("message",c,!1),r(a+": Awaiting calls..."),function(){i.removeEventListener("message",c,!1)}}Object.defineProperty(e,"__esModule",{value:!0});var s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},l="application/x-postmate-v1+json",c=0,u=!1,m=function(){try{return window?window.Promise:m}catch(e){return null}}();e.connectParent=function(e){var n=e.url,t=e.container,c=e.methods,u=void 0===c?{}:c,f=window,p=document.createElement("iframe");(t||document.body).appendChild(p);var v=p.contentWindow||p.contentDocument.parentWindow,h=a(n);return new m(function(e,t){var a=function n(a){if(!o(a,h))return!1;if("handshake-reply"===a.data.postmate){var l=function(){r("Parent: Received handshake reply from Child"),f.removeEventListener("message",n,!1),r("Parent: Saving Child origin",a.origin);var t={localName:"Parent",local:f,remote:v,remoteOrigin:a.origin},o=d(t,u),s=i(t,a.data.methodNames);return s.frame=p,s.destroy=function(){o(),p.parentNode.removeChild(p)},{v:e(s)}}();if("object"===("undefined"==typeof l?"undefined":s(l)))return l.v}return r("Parent: Invalid handshake reply"),t("Failed handshake")};f.addEventListener("message",a,!1);var c=function(){r("Parent: Sending handshake"),v.postMessage({postmate:"handshake",type:l,methodNames:Object.keys(u)},h)};p.attachEvent?p.attachEvent("onload",c):p.onload=c,r("Parent: Loading frame"),p.src=n})},e.connectChild=function(e){var n=e.methods,t=void 0===n?{}:n,a=window,o=a.parent;return new m(function(e,n){var s=function s(c){if(c.data&&"handshake"===c.data.postmate){r("Child: Received handshake from Parent"),a.removeEventListener("message",s,!1),r("Child: Sending handshake reply to Parent"),c.source.postMessage({postmate:"handshake-reply",type:l,methodNames:Object.keys(t)},c.origin),r("Child: Saving Parent origin",c.origin);var u={localName:"Child",local:a,remote:o,remoteOrigin:c.origin};return d(u,t),e(i(u,c.data.methodNames))}return n("Child: Handshake Reply Failed")};a.addEventListener("message",s,!1)})},e.setDebug=function(e){return u=e},e.setPromise=function(e){return m=e}});